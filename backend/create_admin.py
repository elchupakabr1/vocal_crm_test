from database import SessionLocal\nfrom models import User\nfrom passlib.context import CryptContext\n\ndef get_password_hash(password: str):\n    pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")\n    return pwd_context.hash(password)\n\ndef create_admin_user(username: str, password: str):\n    db = SessionLocal()\n    try:\n        # Проверяем, существует ли уже пользователь с таким именем\n        existing_user = db.query(User).filter(User.username == username).first()\n        if existing_user:\n            print(f"Пользователь {username} уже существует")\n            return\n\n        # Создаем нового администратора\n        admin_user = User(\n            username=username,\n            hashed_password=get_password_hash(password)\n        )\n        db.add(admin_user)\n        db.commit()\n        print(f"Администратор {username} успешно создан")\n    except Exception as e:\n        print(f"Ошибка при создании администратора: {str(e)}")\n        db.rollback()\n    finally:\n        db.close()\n\nif __name__ == "__main__":\n    username = input("Введите имя пользователя: ")\n    password = input("Введите пароль: ")\n    create_admin_user(username, password)
